"""Add analysis_data to strategies

Revision ID: 26d7dfc449e7
Revises: 698269937444
Create Date: 2025-07-29 19:26:36.495581

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '26d7dfc449e7'
down_revision: Union[str, Sequence[str], None] = '698269937444'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('performance_data', 'conversion_rate',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('performance_data', 'customer_acquisition_cost',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('performance_data', 'roi',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('performance_data', 'period_start',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.Date(),
               existing_nullable=False)
    op.alter_column('performance_data', 'period_end',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.Date(),
               existing_nullable=False)
    op.alter_column('performance_data', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint(op.f('performance_data_strategy_id_fkey'), 'performance_data', type_='foreignkey')
    op.drop_constraint(op.f('performance_data_product_id_fkey'), 'performance_data', type_='foreignkey')
    op.create_foreign_key(None, 'performance_data', 'products', ['product_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'performance_data', 'strategies', ['strategy_id'], ['id'], ondelete='SET NULL')
    op.add_column('strategies', sa.Column('analysis_data', sa.JSON(), nullable=True))
    op.alter_column('strategies', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('strategies', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.drop_constraint(op.f('strategies_user_id_fkey'), 'strategies', type_='foreignkey')
    op.drop_constraint(op.f('strategies_product_id_fkey'), 'strategies', type_='foreignkey')
    op.create_foreign_key(None, 'strategies', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'strategies', 'products', ['product_id'], ['id'], ondelete='CASCADE')
    op.drop_column('strategies', 'pricing_recommendations')
    op.drop_column('strategies', 'messaging_content')
    op.drop_column('strategies', 'customer_segments')
    op.drop_column('strategies', 'market_analysis')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('strategies', sa.Column('market_analysis', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('strategies', sa.Column('customer_segments', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('strategies', sa.Column('messaging_content', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('strategies', sa.Column('pricing_recommendations', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'strategies', type_='foreignkey')
    op.drop_constraint(None, 'strategies', type_='foreignkey')
    op.create_foreign_key(op.f('strategies_product_id_fkey'), 'strategies', 'products', ['product_id'], ['id'])
    op.create_foreign_key(op.f('strategies_user_id_fkey'), 'strategies', 'users', ['user_id'], ['id'])
    op.alter_column('strategies', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('strategies', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('strategies', 'analysis_data')
    op.drop_constraint(None, 'performance_data', type_='foreignkey')
    op.drop_constraint(None, 'performance_data', type_='foreignkey')
    op.create_foreign_key(op.f('performance_data_product_id_fkey'), 'performance_data', 'products', ['product_id'], ['id'])
    op.create_foreign_key(op.f('performance_data_strategy_id_fkey'), 'performance_data', 'strategies', ['strategy_id'], ['id'])
    op.alter_column('performance_data', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('performance_data', 'period_end',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.alter_column('performance_data', 'period_start',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.alter_column('performance_data', 'roi',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('performance_data', 'customer_acquisition_cost',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('performance_data', 'conversion_rate',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    # ### end Alembic commands ###
